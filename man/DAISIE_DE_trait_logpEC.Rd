% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DAISIE_DE_trait_logpEC.R
\name{DAISIE_DE_trait_logpEC}
\alias{DAISIE_DE_trait_logpEC}
\title{Testing function for comparison with DAISIE}
\usage{
DAISIE_DE_trait_logpEC(
  brts,
  parameter,
  phy,
  traits,
  num_observed_states,
  num_hidden_states,
  trait_mainland_ancestor = NA,
  status,
  sampling_fraction,
  num_threads = 1,
  atol = 1e-15,
  rtol = 1e-15,
  methode = "ode45",
  rcpp_methode = "odeint::bulirsch_stoer",
  use_Rcpp = 0
)
}
\arguments{
\item{brts}{branching times, being: island age, colonization time, branching times}

\item{parameter}{list where first vector represents lambdas, the second
mus and the third transition rates.}

\item{phy}{phylogenetic tree of class \code{phylo}, rooted and with
branch lengths. Alternatively, multiple phylogenetic trees can be provided
as the \code{multiPhylo} class.}

\item{traits}{vector with trait states for each tip in the phylogeny. The
order of the states must be the same as the tree tips. For help, see
\code{vignette("starting_secsse", package = "secsse")}. When providing a
\code{multiPhylo} set of multiple phylognies, traits should be a list where
each entry in the list corresponds to the matching phylogeny on that
position.}

\item{num_observed_states}{number of observed states}

\item{num_hidden_states}{number of hidden states}

\item{trait_mainland_ancestor}{if mainland is TRUE, sets the trait of the mainland ancestor}

\item{status}{indicator for type of inference required}

\item{sampling_fraction}{vector that states the sampling proportion per
trait state. It must have as many elements as there are trait states. When
using a \code{multiPhylo} object, sampling fraction should be list where each
entry in the list corresponds to the sampling proportion for each tree.}

\item{num_threads}{number of threads to be used. Default is one thread.}

\item{atol}{A numeric specifying the absolute tolerance of integration.}

\item{rtol}{A numeric specifying the relative tolerance of integration.}

\item{methode}{used integration method, default is ode45}

\item{rcpp_methode}{Used integration methode when using Rcpp to integrate,
options available are:
\code{"odeint::runge_kutta_cash_karp54"}, \code{"odeint::runge_kutta_fehlberg78"},
\code{"odeint::runge_kutta_dopri5"}, \code{"odeint::bulirsch_stoer"} and
\code{"odeint::runge_kutta4"}. Default method is: \code{"odeint::bulirsch_stoer"}.}

\item{use_Rcpp}{default is 0: use no Rcpp. Value 1 = use Rcpp for the tree likelihood,
value 2 = use Rcpp for the tree likelihood AND the ODEs along the branches}
}
\description{
This function calculates the likelihood of observing a clade with specified species trait states,
given known colonization time. It is designed for comparison with DAISIE-based models.
}
\examples{
library(DAISIE)
library(secsse)
data("Galapagos_datalist")
datalist <- Galapagos_datalist
i <- 4
phy <- DDD::brts2phylo(datalist[[i]]$branching_times[-c(1, 2)])
brts <- datalist[[i]]$branching_times
traits <- sample(c(0, 0), length(brts), replace = TRUE)
sampling_fraction <- sample(c(1, 1), length(brts), replace = TRUE)


parameter <- list(
  c(2.546591, 1.2, 1, 0.2),
  c(2.678781, 2, 1.9, 3),
  c(0.009326754, 0.003, 0.002, 0.2),
  c(1.008583, 1, 2, 1.5),
  matrix(c(
    0,    1,    0.5,  0,
    0,    0,    0.002,0.005,
    rep(0, 8)
  ), nrow = 4),
  0, c(1,0)
)

DAISIE_DE_trait_logpEC(
  brts                    = brts,
  phy                     = phy,
  traits                  = rep(FALSE, length(brts)),
  status                  = 2,
  sampling_fraction       = sampling_fraction,
  parameter               = parameter,
  num_observed_states     = 2,
  num_hidden_states       = 1,
  atol                    = 1e-10,
  rtol                    = 1e-10,
  methode                 = "ode45")

# Or DAISIE style:
parameter <- list(
  c(2.546591, 2.546591),
  c(2.678781, 2.678781),
  c(0.009326754, 0.009326754),
  c(1.008583, 1.008583),
  matrix(c(
    rep(0, 4)
  ), nrow = 2),
  0, c(1,0)
)

DAISIE_DE_trait_logpEC(
  brts                    = brts,
  phy                     = phy,
  traits                  = rep(FALSE, length(brts)),
  status                  = 2,
  sampling_fraction       = sampling_fraction,
  parameter               = parameter,
  num_observed_states     = 2,
  num_hidden_states       = 1,
  atol                    = 1e-10,
  rtol                    = 1e-10,
  methode                 = "ode45")
}
