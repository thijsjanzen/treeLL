% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DAISIE_DE_trait_logpEC.R,
%   R/simplification_example.R
\name{DAISIE_DE_trait_logpEC}
\alias{DAISIE_DE_trait_logpEC}
\title{Testing function for comparison with DAISIE}
\usage{
DAISIE_DE_trait_logpEC(
  brts,
  parameter,
  phy,
  traits,
  num_hidden_traits,
  num_observed_states,
  trait_mainland_ancestor = FALSE,
  status,
  sampling_fraction,
  type = "max_age_hidden",
  cond = "proper_cond",
  root_state_weight = "proper_weights",
  see_ancestral_states = TRUE,
  atol = 1e-10,
  rtol = 1e-10,
  methode = "ode45",
  rhs_func = loglik_hidden_rhs,
  get_initial_conditions2,
  get_initial_conditions4,
  func_for_solution
)

DAISIE_DE_trait_logpEC(
  brts,
  parameter,
  phy,
  traits,
  num_hidden_traits,
  num_observed_states,
  trait_mainland_ancestor = FALSE,
  status,
  sampling_fraction,
  type = "max_age_hidden",
  cond = "proper_cond",
  root_state_weight = "proper_weights",
  see_ancestral_states = TRUE,
  atol = 1e-10,
  rtol = 1e-10,
  methode = "ode45",
  rhs_func = loglik_hidden_rhs,
  get_initial_conditions2,
  get_initial_conditions4,
  func_for_solution
)
}
\arguments{
\item{brts}{Branching times.}

\item{parameter}{List of model parameters.}

\item{phy}{Phylogeny (class 'phylo').}

\item{traits}{Vector of trait states for the tips.}

\item{num_hidden_traits}{Number of hidden trait states.}

\item{num_observed_states}{Number of observed trait states.}

\item{trait_mainland_ancestor}{Trait state of the species at the stem (mainland ancestor).}

\item{cond}{Conditioning scheme (default = "proper_cond").}

\item{root_state_weight}{Root state weighting method (default = "proper_weights").}

\item{see_ancestral_states}{Logical; whether to return ancestral state reconstructions.}

\item{atol}{Absolute tolerance for numerical integration.}

\item{rtol}{Relative tolerance for numerical integration.}

\item{methode}{Numerical integration method (e.g., "ode45").}

\item{num_hidden_states}{Number of hidden trait states.}

\item{missnumspec}{Number of missing species.}

\item{setting_calculation}{Argument used in ML optimization routines.}
}
\description{
This function calculates the likelihood of observing a clade with specified species trait states,
given known colonization time. It is designed for comparison with DAISIE-based models.

This function calculates the likelihood of observing a clade with specified species trait states,
given known colonization time. It is designed for comparison with DAISIE-based models.
}
\examples{
library(DAISIE)
library(secsse)
data("Galapagos_datalist")
datalist <- Galapagos_datalist
i <- 4
phy <- DDD::brts2phylo(datalist[[i]]$branching_times[-c(1, 2)])
brts <- datalist[[i]]$branching_times
traits <- sample(c(0, 0), length(brts), replace = TRUE)
sampling_fraction <- sample(c(1, 1), length(brts), replace = TRUE)


parameter <- list(
  c(2.546591, 1.2, 1, 0.2),
  c(2.678781, 2, 1.9, 3),
  c(0.009326754, 0.003, 0.002, 0.2),
  c(1.008583, 1, 2, 1.5),
  matrix(c(
    0,    1,    0.5,  0,
    0,    0,    0.002,0.005,
    rep(0, 8)
  ), nrow = 4),
  0
)

parameter <- list(2.546591, 2.678781, 0.009326754, 1.008583, matrix(c(0), nrow = 1), 0 )

DAISIE_DE_trait_logpEC(
  brts                    = brts,
  phy                     = phy,
  traits                  = traits,
  status                  = 6,
  sampling_fraction       = sampling_fraction,
  parameter               = parameter,
  num_observed_states     = 2,
  num_hidden_states       = 2,
  atol                    = 1e-10,
  rtol                    = 1e-10,
  methode                 = "ode45",
  rhs_func                = loglik_hidden_rhs,
  get_initial_conditions2 = get_initial_conditions2,
  get_initial_conditions3 = get_initial_conditions3,
  get_initial_conditions4 = get_initial_conditions4,
  func_for_solution       = func_for_solution,
  get_func_interval       = get_func_interval
)
library(DAISIE)
library(secsse)
data("Galapagos_datalist")
datalist <- Galapagos_datalist

i <- 4
phy <- DDD::brts2phylo(datalist[[i]]$branching_times[-c(1, 2)])

traits <- sample(c(0, 0), length(phy$tip.label), replace = TRUE)
sampling_fraction <- sample(c(1, 1), length(phy$tip.label), replace = TRUE)

parameter <- list(
  c(2.546591, 0),                      # Cladogenesis rate + hidden
  c(2.678781, 0),                      # Extinction rate + hidden
  c(0.009326754, 0),                   # Trait-change rate + hidden
  c(1.008583, 0),                      # Anagenesis rate + hidden
  matrix(rep(0, 4), nrow = 2),         # Transition matrix Q (2x2 zeros)
  0                                    # Probability p
)

DAISIE_DE_trait_logpEC(
  brts                    = datalist[[i]]$branching_times,
  phy                     = phy,
  traits                  = traits,
  status                  = 2,
  sampling_fraction       = sampling_fraction,
  parameter               = parameter,
  num_observed_states     = 2,
  num_hidden_traits       = 1,
  cond                    = "proper_cond",
  root_state_weight       = "proper_weights",
  see_ancestral_states    = TRUE,
  atol                    = 1e-10,
  rtol                    = 1e-10,
  methode                 = "ode45",
  rhs_func                = loglik_hidden_rhs,
  get_initial_conditions2 = get_initial_conditions2,
  get_initial_conditions4 = get_initial_conditions4,
  func_for_solution       = func_for_solution
)
}
