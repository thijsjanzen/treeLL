% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DAISIE_DE_trait_logpES.R
\name{DAISIE_DE_trait_logpES}
\alias{DAISIE_DE_trait_logpES}
\title{Testing function for comparison with DAISIE}
\usage{
DAISIE_DE_trait_logpES(
  brts,
  status,
  trait,
  sf = 1,
  trait_mainland_ancestor = FALSE,
  num_observed_states,
  num_hidden_states,
  parameter,
  atol = 1e-10,
  rtol = 1e-10,
  methode = "ode45",
  get_initial_conditions2 = get_initial_conditions2,
  get_initial_conditions4 = get_initial_conditions4,
  get_initial_conditions3 = get_initial_conditions3,
  func_for_solution = func_for_solution
)
}
\arguments{
\item{brts}{Branching times.}

\item{trait}{trait state of the species at the tip.}

\item{trait_mainland_ancestor}{Trait state of the species at the stem (mainland ancestor).}

\item{num_observed_states}{Number of observed trait states.}

\item{num_hidden_states}{Number of hidden trait states.}

\item{parameter}{List of model parameters.}

\item{atol}{Absolute tolerance for numerical integration.}

\item{rtol}{Relative tolerance for numerical integration.}

\item{methode}{Numerical integration method (e.g., "ode45").}

\item{missnumspec}{Number of missing species.}
}
\description{
This function calculates the likelihood of observing a clade with specified species trait states,
given known colonization time. It is designed for comparison with DAISIE-based models.
}
\examples{
library(DAISIE)
library(secsse)
data("Galapagos_datalist")
datalist <- Galapagos_datalist

i <- 7
brts <- datalist[[i]]$branching_times
trait <- 0
sf <- 1

parameter <- list(
  c(2.546591, 1.2, 1, 0.2),
  c(2.678781, 2, 1.9, 3),
  c(0.009326754, 0.003, 0.002, 0.2),
  c(1.008583, 1, 2, 1.5),
  matrix(c(
    0,    1,    0.5,  0,
    0,    0,    0.002,0.005,
    rep(0, 8)
  ), nrow = 4),
  0
)

parameter <- list(2.546591, 2.678781, 0.009326754, 1.008583, matrix(c(0), nrow = 1), 0 )


DAISIE_DE_trait_logpES(
  brts                    = brts,
  trait                  = trait,
  status                  = 2,
  parameter               = parameter,
  num_observed_states     = 2,
  num_hidden_states       = 1,
  atol                    = 1e-10,
  rtol                    = 1e-10,
  methode                 = "ode45",
  get_initial_conditions2 = get_initial_conditions2,
  get_initial_conditions4 = get_initial_conditions4,
  get_initial_conditions3 = get_initial_conditions3,
  func_for_solution       = func_for_solution
)
}
