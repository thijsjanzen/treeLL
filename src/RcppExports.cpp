// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calc_ll_cpp
Rcpp::List calc_ll_cpp(const Rcpp::IntegerVector& ances, const Rcpp::NumericMatrix& states, const Rcpp::NumericMatrix& forTime, const Rcpp::NumericVector& lambda_cs, const Rcpp::NumericVector& lambda_as, const Rcpp::NumericVector& mus, const Rcpp::NumericVector& gammas, const Rcpp::NumericVector& qs, const double& p, const std::string& method, double atol, double rtol, bool see_states, bool use_normalization);
RcppExport SEXP _treeLL_calc_ll_cpp(SEXP ancesSEXP, SEXP statesSEXP, SEXP forTimeSEXP, SEXP lambda_csSEXP, SEXP lambda_asSEXP, SEXP musSEXP, SEXP gammasSEXP, SEXP qsSEXP, SEXP pSEXP, SEXP methodSEXP, SEXP atolSEXP, SEXP rtolSEXP, SEXP see_statesSEXP, SEXP use_normalizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type ances(ancesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type states(statesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type forTime(forTimeSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type lambda_cs(lambda_csSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type lambda_as(lambda_asSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type mus(musSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type qs(qsSEXP);
    Rcpp::traits::input_parameter< const double& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< double >::type atol(atolSEXP);
    Rcpp::traits::input_parameter< double >::type rtol(rtolSEXP);
    Rcpp::traits::input_parameter< bool >::type see_states(see_statesSEXP);
    Rcpp::traits::input_parameter< bool >::type use_normalization(use_normalizationSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_ll_cpp(ances, states, forTime, lambda_cs, lambda_as, mus, gammas, qs, p, method, atol, rtol, see_states, use_normalization));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_treeLL_calc_ll_cpp", (DL_FUNC) &_treeLL_calc_ll_cpp, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_treeLL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
